services:
  # Daemon Mode - K8s Event Watcher + Orchestrator
  oncall-agent-daemon:
    platform: linux/arm64  # Match Mac ARM architecture
    build:
      context: .
      dockerfile: Dockerfile
    image: oncall-agent:local
    container_name: oncall-agent-daemon
    restart: unless-stopped

    # Environment variables
    environment:
      - RUN_MODE=daemon
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_ORG=artemishealth
      - K8S_CONTEXT=dev-eks
      - TEAMS_WEBHOOK_URL=${TEAMS_WEBHOOK_URL}
      - TEAMS_NOTIFICATIONS_ENABLED=true
      - AGENT_LOG_LEVEL=INFO
      - AGENT_MAX_THINKING_TOKENS=12000
      - ALLOWED_CLUSTERS=dev-eks
      - PROTECTED_CLUSTERS=prod-eks,staging-eks
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - DATADOG_API_KEY=${DATADOG_API_KEY}
      - DATADOG_APP_KEY=${DATADOG_APP_KEY}
      - DATADOG_SITE=${DATADOG_SITE:-datadoghq.com}

    # Mount container-friendly kubeconfig (no AWS SSO references)
    # Mount config directory for live config updates (no rebuild needed)
    volumes:
      - ./config:/app/config:ro
      - ./config/kubeconfig-container.yaml:/root/.kube/config:ro

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Health check
    healthcheck:
      test: ["CMD", "python3", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Mode - HTTP Server for n8n Integration
  oncall-agent-api:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
    image: oncall-agent:local
    container_name: oncall-agent-api
    restart: unless-stopped

    # Environment variables
    environment:
      - RUN_MODE=api
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_ORG=artemishealth
      - K8S_CONTEXT=dev-eks
      - AGENT_LOG_LEVEL=INFO
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - DATADOG_API_KEY=${DATADOG_API_KEY}
      - DATADOG_APP_KEY=${DATADOG_APP_KEY}
      - DATADOG_SITE=${DATADOG_SITE:-datadoghq.com}
      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_KEYS=${API_KEYS:-}
      - SESSION_TTL_MINUTES=${SESSION_TTL_MINUTES:-30}
      - MAX_SESSIONS_PER_USER=${MAX_SESSIONS_PER_USER:-5}
      - RATE_LIMIT_AUTHENTICATED=${RATE_LIMIT_AUTHENTICATED:-60}
      - RATE_LIMIT_UNAUTHENTICATED=${RATE_LIMIT_UNAUTHENTICATED:-10}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}

    # Expose API port
    ports:
      - "8000:8000"

    # Mount config directory
    volumes:
      - ./config:/app/config:ro
      - ./config/kubeconfig-container.yaml:/root/.kube/config:ro

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Health check for API mode
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Usage:
# Daemon only:  docker compose up oncall-agent-daemon
# API only:     docker compose up oncall-agent-api
# Both:         docker compose up
# Logs:         docker compose logs -f
# Stop:         docker compose down
