{
  "name": "oncall-agent-slack",
  "nodes": [
    {
      "parameters": {
        "jsCode": "  // Extract Slack message data and prepare for AI Agent\n  // Slack Trigger provides data directly, not nested in \"event\"\n\n  const slackEvent = $input.item.json;\n\n  // DEBUG: Log the entire input to see what Slack sends\n  console.log('=== SLACK EVENT DEBUG ===');\n  console.log('Full event:', JSON.stringify(slackEvent, null, 2));\n  console.log('thread_ts:', slackEvent.thread_ts);\n  console.log('ts:', slackEvent.ts);\n  console.log('========================');\n\n  // Extract message text (remove bot mention)\n  let messageText = slackEvent.text || '';\n  // Remove bot mention (e.g., \"<@U12345> check pods\" -> \"check pods\")\n  messageText = messageText.replace(/<@[A-Z0-9]+>/g, '').trim();\n\n  // Use thread_ts for threading, or ts if this is a new message (not in thread)\n  const threadId = slackEvent.thread_ts || slackEvent.ts;\n\n  // Build session ID from thread ID (for memory persistence)\n  const sessionId = `slack-thread-${threadId}`;\n\n  return {\n    json: {\n      userMessage: messageText,\n      threadId: threadId,\n      sessionId: sessionId,\n      userId: slackEvent.user,\n      channel: slackEvent.channel,\n      timestamp: slackEvent.ts,\n    systemMessage: \"You are an intelligent On-Call Engineering Assistant helping DevOps teams troubleshoot Kubernetes clusters.\\n\\nAvailable Tools:\\n- oncall_agent_query: Deep Kubernetes analysis (pod status, logs, events, deployments). Use this for any K8s-related questions.\\n- website_health_query: Check website/API endpoint health. Use this to verify external service availability.\\n\\nInstructions:\\n- For website issues: Check the site first with website_health_query, then investigate backend pods with oncall_agent_query\\n- For pod/namespace questions: Use oncall_agent_query directly\\n- Remember conversation history and reference previous questions when relevant\\n- Provide actionable remediation steps when issues are found\\n- Be concise but thorough in your analysis\"\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        0
      ],
      "id": "085d7951-1a4b-4560-b8b4-5847a0c03a21",
      "name": "extract_slack_data"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('extract_slack_data').first().json.userMessage }}",
        "options": {
          "systemMessage": "={{ $('extract_slack_data').first().json.systemMessage }}\n",
          "maxIterations": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        512,
        0
      ],
      "id": "e05db575-914c-4eac-afed-364601bd4fce",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-haiku-4-5-20251001",
          "mode": "list",
          "cachedResultName": "Claude Haiku 4.5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        384,
        224
      ],
      "id": "7869af57-9ed3-4649-8c62-8898ae9c1443",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "iK9o3iYn8syeNA0A",
          "name": "oncall-api-key"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Deep Kubernetes cluster analysis with pod status, logs, events, and deployments. Use this to check pod health, restart counts, and troubleshoot issues in any namespace.",
        "method": "POST",
        "url": "http://oncall-agent.oncall-agent.svc.cluster.local/query",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $fromAI('prompt', '', 'string') }}"
            }
          ]
        },
        "options": {
          "timeout": 120000
        }
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        640,
        224
      ],
      "id": "a48adcbb-4184-4762-878f-29dc5a08e5ec",
      "name": "oncall_agent_query"
    },
    {
      "parameters": {
        "toolDescription": "Check if a website or API endpoint is responding correctly. Returns HTTP status code, response time, and body preview to determine availability and performance.",
        "url": "={{ $fromAI('url', '', 'string') }}",
        "options": {
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        768,
        224
      ],
      "id": "a981ef07-05af-475b-9787-176a8168044c",
      "name": "website_health_query"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('extract_slack_data').first().json.sessionId }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        512,
        224
      ],
      "id": "76f11061-076b-43d0-a41d-539673df7cc2",
      "name": "conversation_memory"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09LWTRDQUX",
          "mode": "list",
          "cachedResultName": "oncall-agent"
        },
        "text": "={{ $json.output }}",
        "otherOptions": {
          "thread_ts": {
            "replyValues": {
              "thread_ts": "=      \"otherOptions\": {\n        \"thread_ts\": \"={{ $('extract_slack_data').first().json.threadId }}\"\n      }"
            }
          }
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.2,
      "position": [
        976,
        0
      ],
      "id": "4410286e-9328-4e9c-818d-ee7de7af78ac",
      "name": "send_slack_response",
      "webhookId": "195e76f8-e86a-4a10-8843-eaaa9baf8515",
      "credentials": {
        "slackApi": {
          "id": "QG9MHFxziEQJLXpi",
          "name": "oncall-channel"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "extract_slack_data": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "send_slack_response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "oncall_agent_query": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "website_health_query": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "conversation_memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8c1859bf-5a9d-47bb-b675-5c759589d617",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "260fb3ae0081ce3b9ce29644be117d777383438b7271b6493786a73693ada027"
  },
  "id": "j38emZQIFfEhRPA5",
  "tags": [
    {
      "createdAt": "2025-10-22T00:33:56.419Z",
      "updatedAt": "2025-10-22T00:33:56.419Z",
      "id": "diXUfRHeQbgLIWVV",
      "name": "slack"
    },
    {
      "createdAt": "2025-10-22T00:33:56.548Z",
      "updatedAt": "2025-10-22T00:33:56.548Z",
      "id": "WKxDhZtHsE5VBuXs",
      "name": "devops"
    }
  ]
}